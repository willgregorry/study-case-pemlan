import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class FileManager {
    private static final String DATA_FILE = "datas/";

    public FileManager() {
        // Make sure the data directory exists
        File dataDir = new File(DATA_FILE);
        if (!dataDir.exists()) {
            dataDir.mkdirs();
            System.out.println("Created data directory on initialization: " + dataDir.getAbsolutePath());
        }
    }

    public String[] readDataFromFile(String path) {
        String[] datas = new String[100];
        int i = 0;
        try {
            File data = new File(DATA_FILE + path);
            System.out.println("Reading from file: " + data.getAbsolutePath());

            if (data.exists()) {
                Scanner scanner = new Scanner(data);
                while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                    datas[i] = line;
                    i++;
                }
                scanner.close();
                System.out.println("Successfully read " + i + " lines from file");
            } else {
                System.out.println("File does not exist: " + data.getAbsolutePath());
            }
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
            e.printStackTrace();
        }
        return datas;
    }

    public void writeDataToFile(String data, String path) {
        try {
            File file = new File(DATA_FILE + path);

            // Create parent directory if it doesn't exist
            File parentDir = file.getParentFile();
            if (parentDir != null && !parentDir.exists()) {
                parentDir.mkdirs();
            }

            // If file doesn't exist, create it
            if (!file.exists()) {
                file.createNewFile();
            }

            System.out.println("Writing to file: " + file.getAbsolutePath());
            System.out.println("Data to write: " + data);

            BufferedWriter writer = new BufferedWriter(new FileWriter(file, true));
            writer.write(data);
            writer.newLine();
            writer.close();

            System.out.println("Successfully wrote data to file");
        } catch (IOException e) {
            System.out.println("Error writing to file: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Static version for backward compatibility
    public static String[] readDataFromFile_static(String path) {
        String[] datas = new String[100];
        int i = 0;
        try {
            File data = new File(DATA_FILE + path);
            if (data.exists()) {
                Scanner scanner = new Scanner(data);
                while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                    datas[i] = line;
                    i++;
                }
                scanner.close();
            }
        } catch (IOException e) {
            System.out.println("File not found!");
        }
        return datas;
    }

    // Static version for backward compatibility
    public static void writeDataToFile_static(String data, String path) {
        try {
            File file = new File(DATA_FILE + path);

            // Create parent directory if it doesn't exist
            File parentDir = file.getParentFile();
            if (parentDir != null && !parentDir.exists()) {
                parentDir.mkdirs();
            }

            BufferedWriter writer = new BufferedWriter(new FileWriter(file, true));
            writer.write(data);
            writer.newLine();
            writer.close();
        } catch (IOException e) {
            System.out.println("Error appending to file: " + e.getMessage());
        }
    }
}